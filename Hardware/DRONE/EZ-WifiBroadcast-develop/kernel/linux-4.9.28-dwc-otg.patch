diff -Naur linux-1423ac8bfbfb2a9d092b604c676e7a58a5fa3367/drivers/usb/host/dwc_otg/dwc_otg_driver.c linux-1423ac8bfbfb2a9d092b604c676e7a58a5fa3367.dwc-otg/drivers/usb/host/dwc_otg/dwc_otg_driver.c
--- linux-1423ac8bfbfb2a9d092b604c676e7a58a5fa3367/drivers/usb/host/dwc_otg/dwc_otg_driver.c	2017-05-15 17:23:14.000000000 +0200
+++ linux-1423ac8bfbfb2a9d092b604c676e7a58a5fa3367.dwc-otg/drivers/usb/host/dwc_otg/dwc_otg_driver.c	2017-07-08 15:12:43.420630954 +0200
@@ -249,6 +249,8 @@
 
 unsigned short fiq_fsm_mask = 0x0F;
 
+unsigned short int_ep_interval_min = 0;
+
 /**
  * This function shows the Driver Version.
  */
@@ -1399,6 +1401,10 @@
 					"Bit 2 : High-speed multi-transfer isochronous\n"
 					"All other bits should be set 0.");
 
+module_param(int_ep_interval_min, ushort, 0644);
+MODULE_PARM_DESC(int_ep_interval_min, "Clamp high-speed Interrupt endpoints to a minimum polling interval.\n"
+		    "0..1 = Use endpoint default\n"
+		    "2..n = Minimum interval n microframes. Use powers of 2.\n");
 
 /** @page "Module Parameters"
  *
diff -Naur linux-1423ac8bfbfb2a9d092b604c676e7a58a5fa3367/drivers/usb/host/dwc_otg/dwc_otg_hcd_queue.c linux-1423ac8bfbfb2a9d092b604c676e7a58a5fa3367.dwc-otg/drivers/usb/host/dwc_otg/dwc_otg_hcd_queue.c
--- linux-1423ac8bfbfb2a9d092b604c676e7a58a5fa3367/drivers/usb/host/dwc_otg/dwc_otg_hcd_queue.c	2017-05-15 17:23:14.000000000 +0200
+++ linux-1423ac8bfbfb2a9d092b604c676e7a58a5fa3367.dwc-otg/drivers/usb/host/dwc_otg/dwc_otg_hcd_queue.c	2017-07-08 15:19:40.924637219 +0200
@@ -44,6 +44,8 @@
 
 extern bool microframe_schedule;
 
+extern unsigned short int_ep_interval_min;
+
 /**
  * Free each QTD in the QH's QTD-list then free the QH.  QH should already be
  * removed from a list.  QTD list should already be empty if called from URB
@@ -218,21 +220,33 @@
 						    SCHEDULE_SLOP);
 		qh->interval = urb->interval;
 
-#if 0
-		/* Increase interrupt polling rate for debugging. */
-		if (qh->ep_type == UE_INTERRUPT) {
-			qh->interval = 8;
-		}
-#endif
+//#if 0
+//		/* Increase interrupt polling rate for debugging. */
+//		if (qh->ep_type == UE_INTERRUPT) {
+//			qh->interval = 8;
+//		}
+//#endif
 		hprt.d32 = DWC_READ_REG32(hcd->core_if->host_if->hprt0);
-		if ((hprt.b.prtspd == DWC_HPRT0_PRTSPD_HIGH_SPEED) &&
-		    ((dev_speed == USB_SPEED_LOW) ||
-		     (dev_speed == USB_SPEED_FULL))) {
+//		if ((hprt.b.prtspd == DWC_HPRT0_PRTSPD_HIGH_SPEED) &&
+//		    ((dev_speed == USB_SPEED_LOW) ||
+//		     (dev_speed == USB_SPEED_FULL))) {
+//			qh->interval *= 8;
+//			qh->sched_frame |= 0x7;
+//			qh->start_split_frame = qh->sched_frame;
+//		}
+
+		if (hprt.b.prtspd == DWC_HPRT0_PRTSPD_HIGH_SPEED) {
+		    if (dev_speed == USB_SPEED_LOW ||
+			dev_speed == USB_SPEED_FULL) {
 			qh->interval *= 8;
 			qh->sched_frame |= 0x7;
 			qh->start_split_frame = qh->sched_frame;
+		    } else if (int_ep_interval_min >= 2 &&
+			qh->interval < int_ep_interval_min &&
+			qh->ep_type == UE_INTERRUPT) {
+			qh->interval = int_ep_interval_min;
+		    }
 		}
-
 	}
 
 	DWC_DEBUGPL(DBG_HCD, "DWC OTG HCD QH Initialized\n");
